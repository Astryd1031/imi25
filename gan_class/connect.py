"""
GAN-based Risk Scoring Module
=============================

This module provides a function to compute a GAN-based risk score for a given customer ID.
It selects an appropriate GAN training method based on the amount of transaction data available.

Dependencies:
-------------
- big_training (from gan_class.big_training_gan): Trains a GAN model for customers with large transaction histories.
- small_training (from gan_class.small_training_gan): Trains a GAN model for customers with limited transaction history.
- get_customer_data (from gan_class.gan_general_data): Retrieves transaction data for a given customer.

"""

from gan_class.big_training_gan import big_training
from gan_class.gan_general_data import get_customer_data
from gan_class.small_training_gan import small_training


def gan_score(customer_id):
    """
    Computes a GAN-based risk score for a given customer.

    This function retrieves transaction data for the specified customer and applies
    different GAN training methods based on the number of transaction records available.

    Parameters:
    -----------
    - customer_id (str): Unique identifier for the customer.

    Returns:
    --------
    - float or None: Risk score generated by the appropriate GAN model, or None if no data is found.

    Logic:
    ------
    1. Fetch customer transaction data.
    2. If data is unavailable or empty, return None.
    3. If the customer has fewer than 65 transaction records, use `small_training()`.
    4. If the customer has 65 or more transaction records, use `big_training()`.
    """
    df = get_customer_data(customer_id)

    # Validate if data exists before proceeding
    if df is None or df.empty:
        return None  # No data available for the customer

    # Choose appropriate GAN training method based on transaction count
    if df.shape[0] < 65:
        return small_training(df)
    else:
        return big_training(df)


# Example Usage
if __name__ == "__main__":
    customer_idd = "SYNCID0000000051"
    risk_score = gan_score(customer_idd)
    print(f"Risk Score : {risk_score}")



